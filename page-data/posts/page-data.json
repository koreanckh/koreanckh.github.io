{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"55a17949-c35b-555f-bc47-a99126cf7583","excerpt":"1. 크롤링을 하게 된 이유 사이드 프로젝트 중에 덤프 이미지 파일이 필요해서 구하려고 하다보니 자연스럽게 크롤링으로 이미지를 가져와야 겠다는 생각이 들었다. 파이썬을 해본적이 없어서 여기저기 올라와 있는 글을 보며 뜨문뜨문 하다보니 여기저기 문제가 생기기도 했는데.. 유튜브를 보니 굉장히 쉬운 방법이 있길래 정리해본다. 2. 실패한 코드 (1) 계획  조합으로 하여 실제로 페이지를 작동하고 그것을 기반으로 크롤링을 하려고 했다.(크롤링 방법에 대해 몰라서 어디선가 들어본 selenium으로 시작…) (2) 문제 일단 페이지 작동 및 다운로드에는 성공했는데.. 문제는 원본 이미지 다운로드를 원했는데 작은 사이즈의 썸네일 이미지가 받아지는 것이 문제였다…; 나 등의 방법으로 해봤는데도 공톰점을 찾는 방식이 잘못 되었는지 원하는 사진이 다운로드 되다 말다를 반복해서 이건 아니다 싶어서 다른 방법을 찾아보았다.. 초반에는 selenium 문법이 버전에 따라 바뀐다는 것을 모르고, 인터넷…","fields":{"slug":"/python-001-google-crwaling/"},"frontmatter":{"categories":"Python","title":"python으로 구글 이미지 크롤링 하는법","date":"October 27, 2022"}},"next":{"fields":{"slug":"/spring-003-mybatis-error/"}},"previous":null},{"node":{"id":"2695cba2-0c52-54b6-bb86-7729d0a3de41","excerpt":"1. Mybatis + DTO 매핑시 문제 JPA공부를 하며 사이드 프로젝트를 하려고 하고 있었는데, 급하게 시간을 맞춰야 하는 일정이 생겨서 JPA로 작업하던 것을 놔두고 급하게 Mybatis로 개발을 시작했다. 문제없이 작업을 하고 있었는데 갑자기 Mybatis에서 로 하면서 매핑이 제대로 되지 않는 문제가 생겼다. 처음에는 에러가 발생한게 아니라 매핑이 꼬인것처럼 원하는 데이터가 dto 파라미터와 제대로 매핑이 되지 않았었다. 이상하다 싶어서 로 컬럼 하나만 호출 해봤더니  또는  라며 에러가 떴다. 그래서 Dto에 타입 설정을 잘못 했나 싶어서 봤더니 String으로 했음에도 Integer로 디코딩에 실패했다는 에러가 자꾸 발생하였다.. 2. 원인? 해결? 문제는 때문이었다!\n@Builder를 선언해주게 되면 Dto의 기본 생성자가 사라지게 된다고 한다.\n따라서 명시적으로 기본생성자를 만들어주거나 나  어노테이션을 붙여주니 정상적으로 이용할 수 있게 되었다. 급한 마음에 어…","fields":{"slug":"/spring-003-mybatis-error/"},"frontmatter":{"categories":"Spring","title":"Mybatis + DTO 매핑이 꼬이고 자꾸 에러 나는 문제(@Builder 사용중 에러..)","date":"September 20, 2022"}},"next":{"fields":{"slug":"/spring-002-swagger-openapi/"}},"previous":{"fields":{"slug":"/python-001-google-crwaling/"}}},{"node":{"id":"0669127e-a530-58db-9cb7-877b0ea60a17","excerpt":"1. OpenAPI는 무엇인가? OpenAPI는 REST api 포맷의 api 명세서이다. OpenAPI 파일을 사용하면","fields":{"slug":"/spring-002-swagger-openapi/"},"frontmatter":{"categories":"Spring","title":"Swagger 3 + OpenAPI 로 api 문서 관리하기","date":"September 20, 2022"}},"next":{"fields":{"slug":"/sql-001/"}},"previous":{"fields":{"slug":"/spring-003-mybatis-error/"}}},{"node":{"id":"d7513549-56f6-5a51-8036-938e48df2f9c","excerpt":"INFORMATION_SCHEMA는 MySQL에서 제공하는 DB 관련 정보들을 저장하고 있는 데이터베이스이다. 스키마 별로 조회도 가능하고, 특정 테이블에 대해서만도 조회가 가능하다. 참고 이와 같이 information_schema 데이터베이스의 테이블들을 조회해보면 많은 정보들이 들어있다. 나중에 다른 필요한 정보가 있을때 그때 다시 알아보도록 하자…","fields":{"slug":"/sql-001/"},"frontmatter":{"categories":"Sql Mysql","title":"MySQL 스카마 내 전체 테이블 목록 및 컬럼 정보 조회.","date":"September 14, 2022"}},"next":{"fields":{"slug":"/spring-001-health-check/"}},"previous":{"fields":{"slug":"/spring-002-swagger-openapi/"}}},{"node":{"id":"0ed4b80e-6135-5d45-a97b-7073f984af4b","excerpt":"0. 개요 서비스가 많아지는데 일일이 헬스체크할 필요가 생겨났는데 어떻게 만드는게 좋을지 검색하던 참에 Spring Actuator라는 것을 알게 되었고, 추가적으로 uptime-kuma라는 오픈소스가 제공되고 있기에 이를 사용해서 헬스체크 서버를 만들어 보기로 하였다. 이런 고마운 천재들… 1. Spring Actuator 설정 https://incheol-jung.gitbook.io/docs/study/srping-in-action-5th/chap-16. 처음에는 서버가 정상적으로 잘 작동하고 있는지 요소들을 확인하여 기능별로 헬스체크용 api를 만들어두고 Client 서버에서 호출할 생각이었는데, Spring Actuator 의존성을 추가해주기만 하면 이런 기능들과 관련한 endpoint를 자동으로 제공해준다고 한다!! (1) Spring Actuator 의존성 추가 maven 추가 gradle 추가 (2) Spring Actuator에서 제공하는 Endpoint HTTP 메…","fields":{"slug":"/spring-001-health-check/"},"frontmatter":{"categories":"Spring","title":"Spring Actuator + uptime-kuma로 헬스 체크 만들기","date":"September 01, 2022"}},"next":{"fields":{"slug":"/aws-003-github-action-with-codedeploy-2/"}},"previous":{"fields":{"slug":"/sql-001/"}}},{"node":{"id":"108f652a-6d7a-5490-8228-d31e23426eac","excerpt":"4. IAM 권한 설정 (1) EC2 적용     AWSCodeDeployFullAccess AmazonS3FullAccess 두 가지 권한을 체크하여 역할을 만든다. 역할 이름은 EC2에 권한 설정을 해줘야 하기 때문에 기억해두어야 한다. 위에서 만든 IAM 역할을 EC2 서버에 적용해주자.   (2) CodeDeploy 적용 \n이번에는 CodeDeploy에 적용할 IAM을 만들어야 하는데, AWS에서 서비스하는 CodeDeploy를 이용할 것이기 때문에 검색하여 선택해주고, 다음화면에서는 권한을 따로 체크해주지 않아도 된다. 5. CodeDeploy 생성.   EC2 서버에 배포해줄 CodeDeploy를 만들어주자. 6. CodeDeploy 용 IAM 만들기 IAM은 일종의 AWS 접속용 계정을 만들어주는 것으로 보면 될듯..","fields":{"slug":"/aws-003-github-action-with-codedeploy-2/"},"frontmatter":{"categories":"블로그 AWS Git","title":"Github Action + AWS EC2 CodeDeploy + S3를 이용하여 자동 배포 하기 (2/2)","date":"August 30, 2022"}},"next":{"fields":{"slug":"/aws-002-github-action-with-codedeploy/"}},"previous":{"fields":{"slug":"/spring-001-health-check/"}}},{"node":{"id":"6a799182-8fb3-59b4-97e1-d6b5b65d82a5","excerpt":"0. 전체적인 흐름 Github Action 설정을 통해 빌드 파일을 S3에 업로드 하고, CodeDeploy 를 실행함. CodeDeploy 에서 EC2에 배포 실행하도록 명령. 1단계에서 S3에 올려둔 필드 파일을 EC2에서 가져와 예약된 스크립트 실행. 1. S3 만들기 Github Action으로 만들어진 빌드 압축파일을 업로드 할 S3파일을 만들어주자. \n다른 설정들은 기본 옵션으로 두고 만 확인해두자. Github Action 설정 yml파일에 업로드할 S3 버킷 이름을 세팅해줘야 한다. 2. AWS EC2 서버에 CodeDeploy 설치 CodeDeploy 설치시 필요한 패키지 설치 이전 에이전트 캐싱 정보의 AMI를 정리 임시 shell 파일을 만들어서 실행해주자. 파일 다운로드 다운로드 파일 설치 설치 확인 및 실행 라는 메시지가 나오면 성공! CodeDeploy 설치 : https://docs.aws.amazon.com/ko_kr/codedeploy/latest/…","fields":{"slug":"/aws-002-github-action-with-codedeploy/"},"frontmatter":{"categories":"블로그 AWS Git","title":"Github Action + AWS EC2 CodeDeploy + S3를 이용하여 자동 배포 하기 (1/2)","date":"August 29, 2022"}},"next":{"fields":{"slug":"/algorithm-001/"}},"previous":{"fields":{"slug":"/aws-003-github-action-with-codedeploy-2/"}}},{"node":{"id":"c071f920-ad3d-5981-b714-f29b5a7f1f30","excerpt":"1. 테스트 첫글이 제대로 보이는지 테스트","fields":{"slug":"/algorithm-001/"},"frontmatter":{"categories":"블로그 잡담","title":"첫글 테스트","date":"August 28, 2022"}},"next":{"fields":{"slug":"/aws-001/"}},"previous":{"fields":{"slug":"/aws-002-github-action-with-codedeploy/"}}},{"node":{"id":"9bbf2555-4f9b-5fbf-ac41-ae85bc4d4684","excerpt":"amazon-linux 로 생성한 EC2에서 진행하였습니다. 1. EC2에서 git, java 설치 git 설치 java 설치(각자 버전에 맞게) 2. git에서 소스 내려받기 3. 패키지 빌드 프로젝트 루트 디렉토리에서 실행 (1) maven maven 빌드 후에 경로에  확장자명으로 파일이 생성된다. 정상적으로 빌드 되었는지 실행해보자. (2) gradle gradle 빌드 후에는 이하에  파일이 생성된다. 마찬가지로 오류 없이 빌드 되는지 실행해본다. 4. deploy.sh 작성 (1) deploy.sh 샘플 (2) gradle 빌드 후 서버 구동시 주의사항 gradle 빌드시에 따로 설정을 해주지 않으면 파일과 파일 두개가 생긴다. 파일은 의존성이 포함되지 않은 파일이기 때문에 파일 용량도 작고 정상적으로 서버가 구동되지 않는다. 따라서 서버 실행 스크립트를 수정해주거나 gradle 빌드시에 파일이 생성되지 않도록 파일을 수정 해주어야 한다.","fields":{"slug":"/aws-001/"},"frontmatter":{"categories":"AWS","title":"AWS EC2에 Spring boot 배포하기!(작성중..)","date":"August 28, 2022"}},"next":{"fields":{"slug":"/gatsby-github-blog/"}},"previous":{"fields":{"slug":"/algorithm-001/"}}},{"node":{"id":"94bebb84-f44e-570b-9580-99d65187680e","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","fields":{"slug":"/gatsby-github-blog/"},"frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"}},"next":{"fields":{"slug":"/etc/README/"}},"previous":{"fields":{"slug":"/aws-001/"}}},{"node":{"id":"83895f96-f1e0-5ff4-9d04-a235482b3bd2","excerpt":"출처 : https://github.com/ihoneymon/translate-spring-boot-reference 개인적으로 공부하려고 가져옴.. 문제시 삭제.. 스프링 부트 참고가이드 작성자 Phillip Webb, Dave Syer, Josh Long, Stéphane Nicoll, Rob Winch, Andy Wilkinson, Marcel Overdijk, Christian Dupuis, Sébastien Deleuze 1.2.0.BUILD-SNAPSHOT Copyright © 2013-2014 Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whet…","fields":{"slug":"/etc/README/"},"frontmatter":{"categories":"etc","title":"스프링 부트 참고가이드","date":"July 06, 2021"}},"next":{"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}},"previous":{"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"c25ca474-6ce7-5d8a-aad0-f404c233aa78","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"},"frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"}},"next":null,"previous":{"fields":{"slug":"/etc/README/"}}}],"categories":["All","Python","Spring","Sql","Mysql","블로그","AWS","Git","잡담","featured","etc"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}