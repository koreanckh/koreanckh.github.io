{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/spring-004-mybatis-innerclass/",
    "result": {"data":{"cur":{"id":"db24e7b5-c8b0-5fc6-b3f1-303daa6497a0","html":"<h1 id=\"1-문제\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C\" aria-label=\"1 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제..</h1>\n<p>Dto 대신에 매번 Map으로 사용하다보니 귀찮고 불편한 일들이 많았다..<br>\n이번 사이드 프로젝트는 Dto로 진행을 하다보니 Mybatis에서 result mapping 시에 inner class 매핑할때 문제가 생겼다..<br>\n<del>(JPA를 제대로 사용할 줄 알면 간단하게 해결 될 일인데.. 반드시..)</del></p>\n<h1 id=\"2-mybatis에서-inner-class-dto에-매핑하기\" style=\"position:relative;\"><a href=\"#2-mybatis%EC%97%90%EC%84%9C-inner-class-dto%EC%97%90-%EB%A7%A4%ED%95%91%ED%95%98%EA%B8%B0\" aria-label=\"2 mybatis에서 inner class dto에 매핑하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Mybatis에서 inner class DTO에 매핑하기.</h1>\n<h3 id=\"java-dto-소스\" style=\"position:relative;\"><a href=\"#java-dto-%EC%86%8C%EC%8A%A4\" aria-label=\"java dto 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JAVA DTO 소스</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AdminDto</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Data</span>\n    <span class=\"token annotation punctuation\">@Builder</span>\n    <span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n    <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Performance</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> performanceIdx<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> kopisId<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> genreCode<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> hallCode<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> openRun<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> poster<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> statusCode<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LocalDate</span> startDate<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LocalDate</span> endDate<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PerformanceMeta</span> performanceMeta<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Data</span>\n    <span class=\"token annotation punctuation\">@Builder</span>\n    <span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n    <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PerformanceMeta</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> price<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> casting<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> crew<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> enterprise<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> story<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> introImages<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> schedules<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"mybatis-소스\" style=\"position:relative;\"><a href=\"#mybatis-%EC%86%8C%EC%8A%A4\" aria-label=\"mybatis 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mybatis 소스</h3>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.example.sample.dao.mybatis.AdminDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resultMap</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceMeta<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.example.sample.dto.AdminDto$Performance<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceIdx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performance_idx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>kopisId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>kopis_id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>genreCode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>genre_code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hallCode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hall_code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>openRun<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>open_run<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>poster<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>poster<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>statusCode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>status_code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>startDate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>start_date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>endDate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>end_date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>association</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceMeta<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">javaType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.example.sample.dto.AdminDto$PerformanceMeta<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>price<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>price<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>casting<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>casting<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>crew<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>crew<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enterprise<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enterprise<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>story<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>story<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>introImages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>intro_images<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>schedules<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>schedules<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>association</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resultMap</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>findPerformanceList<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.example.sample.dto.AdminDto$Performance<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceMeta<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--    대충 dto에 매핑되는 query    --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>기존에는 쿼리결과값에 대한 결과값을 <code class=\"language-text\">resultType</code>을 이용해서만 받았다면, inner class 를 사용한다면 <code class=\"language-text\">resultMap</code>를 구성해 놓고 사용하면 된다. (inner class를 선택할때는 DTO 경로 뒤에 <code class=\"language-text\">$</code>사용)</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceIdx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performance_idx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<p><code class=\"language-text\">property</code>에는 Dto에 선언해둔 파라미터의 이름을 적고, <code class=\"language-text\">column</code>에는 query를 통해서 뽑은 컬럼 이름(alias 적용 이후)을 적어주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resultMap</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceMeta<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.example.sample.dto.AdminDto$Performance<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>association</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>performanceMeta<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">javaType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.example.sample.dto.AdminDto$PerformanceMeta<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>association</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resultMap</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>association의 <code class=\"language-text\">property</code>과 <code class=\"language-text\">javaType</code>에도 <code class=\"language-text\">type=\"io.example.sample.dto.AdminDto$Performance\"</code>에서 선언해주었던 이름대로 해야 제대로 매핑이 되는것 같다.</p>\n<p>마지막으로 JPA를 꼭 배워서 이런 번거로움을 해결하자… ㅜ</p>","excerpt":"1. 문제.. Dto 대신에 매번 Map으로 사용하다보니 귀찮고 불편한 일들이 많았다.. 이번 사이드 프로젝트는 Dto로 진행을 하다보니 Mybatis에서 result mapping 시에 inner class 매핑할때 문제가 생겼다.. (JPA를 제대로 사용할 줄 알면 간단하게 해결 될 일인데.. 반드시..) 2. Mybatis에서 inner class DTO에 매핑하기. JAVA DTO 소스 mybatis 소스 기존에는 쿼리결과값에 대한 결과값을 을 이용해서만 받았다면, inner class 를 사용한다면 를 구성해 놓고 사용하면 된다. (inner class를 선택할때는 DTO 경로 뒤에 사용) 에는 Dto에 선언해둔 파라미터의 이름을 적고, 에는 query를 통해서 뽑은 컬럼 이름(alias 적용 이후)을 적어주면 된다. association의 과 에도 에서 선언해주었던 이름대로 해야 제대로 매핑이 되는것 같다. 마지막으로 JPA를 꼭 배워서 이런 번거로움을 해결하자… ㅜ","frontmatter":{"date":"November 15, 2022","title":"Mybatis + inner clas DTO 매핑 하는 법","categories":"Spring","author":"막걸리에 감자전","emoji":"💻"},"fields":{"slug":"/spring-004-mybatis-innerclass/"}},"next":{"id":"55a17949-c35b-555f-bc47-a99126cf7583","html":"<h2 id=\"1-크롤링을-하게-된-이유\" style=\"position:relative;\"><a href=\"#1-%ED%81%AC%EB%A1%A4%EB%A7%81%EC%9D%84-%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"1 크롤링을 하게 된 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 크롤링을 하게 된 이유</h2>\n<p>사이드 프로젝트 중에 덤프 이미지 파일이 필요해서 구하려고 하다보니 자연스럽게 크롤링으로 이미지를 가져와야 겠다는 생각이 들었다.<br>\n파이썬을 해본적이 없어서 여기저기 올라와 있는 글을 보며 뜨문뜨문 하다보니 여기저기 문제가 생기기도 했는데..<br>\n유튜브를 보니 굉장히 쉬운 방법이 있길래 정리해본다.</p>\n<h2 id=\"2-실패한-코드\" style=\"position:relative;\"><a href=\"#2-%EC%8B%A4%ED%8C%A8%ED%95%9C-%EC%BD%94%EB%93%9C\" aria-label=\"2 실패한 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 실패한 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># selenium 관련 라이브러리를 불러오는 코드</span>\n<span class=\"token keyword\">from</span> turtle <span class=\"token keyword\">import</span> clear\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>keys <span class=\"token keyword\">import</span> Keys\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>by <span class=\"token keyword\">import</span> By\n\n<span class=\"token comment\"># 프로그램을 잠깐 멈추게 하기위한 라이브러리</span>\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token comment\"># url로 이미지를 다운받기 위한 라이브러리</span>\n<span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>request\n\n<span class=\"token comment\">## SSL: CERTIFICATE_VERIFY_FAILED 에러 조치</span>\n<span class=\"token keyword\">import</span> ssl\nssl<span class=\"token punctuation\">.</span>_create_default_https_context <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>_create_unverified_context\n\n<span class=\"token comment\">### 디렉토리가 없을경우 새로 생성.</span>\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">def</span> <span class=\"token function\">createFolder</span><span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> OSError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error : create directory :: '</span> <span class=\"token operator\">+</span> directory<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># driver로 해당 페이지로 이동 : 구글 이미지로 이동</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.google.co.kr/imghp?hl=ko&amp;ogbl\"</span><span class=\"token punctuation\">)</span>\n\nitemList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">## </span>\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./itemList.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    line <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    itemList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> itemList <span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 검색창 element 찾기 / 구글 이미지 input name = q</span>\n        elem <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"q\"</span><span class=\"token punctuation\">)</span>\n\n        elem<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\"># 원하는 값 입력</span>\n        elem<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 입력한 값 전송</span>\n        elem<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>RETURN<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 검색후 로드 될 때까지 대기</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n        i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n\n            <span class=\"token comment\"># 내가 필요한 요소 선택 : 검색한 미리보기 이미지</span>\n            images <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"#islrg > div > div > a > div > img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\"># 미리보기 클릭하여 로드 될때까지 대기.</span>\n            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'/html/body/div[2]/c-wiz/div[3]/div[2]/div[3]/div/div/div[3]/div[2]/c-wiz/div[1]/div[1]/div/div[2]/a/img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            imageUrl <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'/html/body/div[2]/c-wiz/div[3]/div[2]/div[3]/div/div/div[3]/div[2]/c-wiz/div[1]/div[1]/div/div[2]/a/img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_attribute<span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 크게 뜬 이미지 선택하여 \"src\" 속성을 받아옴</span>\n\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span>\n                createFolder<span class=\"token punctuation\">(</span><span class=\"token string\">\"./img/\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">)</span>\n\n            urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>urlretrieve<span class=\"token punctuation\">(</span>imageUrl<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./img/\"</span> <span class=\"token operator\">+</span> item <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\".jpg\"</span><span class=\"token punctuation\">)</span>\n            \n            i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            \n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> ex<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'에러발생'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"1-계획\" style=\"position:relative;\"><a href=\"#1-%EA%B3%84%ED%9A%8D\" aria-label=\"1 계획 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 계획</h3>\n<p><code class=\"language-text\">selenium + chromedriver</code> 조합으로 하여 실제로 페이지를 작동하고 그것을 기반으로 크롤링을 하려고 했다.(크롤링 방법에 대해 몰라서 어디선가 들어본 selenium으로 시작…)</p>\n<h3 id=\"2-문제\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B8%EC%A0%9C\" aria-label=\"2 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 문제</h3>\n<p>일단 페이지 작동 및 다운로드에는 성공했는데..<br>\n문제는 원본 이미지 다운로드를 원했는데 작은 사이즈의 썸네일 이미지가 받아지는 것이 문제였다…;<br>\n<code class=\"language-text\">By.Xpath</code>나 <code class=\"language-text\">By.CSS_SELECTOR</code>등의 방법으로 해봤는데도 공톰점을 찾는 방식이 잘못 되었는지 원하는 사진이 다운로드 되다 말다를 반복해서 이건 아니다 싶어서 다른 방법을 찾아보았다..</p>\n<p>초반에는 selenium 문법이 버전에 따라 바뀐다는 것을 모르고, 인터넷에 많이 떠도는 예제를 따라하다가 예전 문법인 <code class=\"language-text\">find_elements_by_css_selector()</code>을 그대로 사용해서 한참 시간을 버리기도…</p>\n<h2 id=\"3-쉽게-구글-이미지-크롤링-하는법-구글-이미지-한정\" style=\"position:relative;\"><a href=\"#3-%EC%89%BD%EA%B2%8C-%EA%B5%AC%EA%B8%80-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%81%AC%EB%A1%A4%EB%A7%81-%ED%95%98%EB%8A%94%EB%B2%95-%EA%B5%AC%EA%B8%80-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%95%9C%EC%A0%95\" aria-label=\"3 쉽게 구글 이미지 크롤링 하는법 구글 이미지 한정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 쉽게 구글 이미지 크롤링 하는법 (구글 이미지 한정)</h2>\n<h3 id=\"1-참고-유튜브\" style=\"position:relative;\"><a href=\"#1-%EC%B0%B8%EA%B3%A0-%EC%9C%A0%ED%8A%9C%EB%B8%8C\" aria-label=\"1 참고 유튜브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 참고 유튜브</h3>\n<blockquote>\n<p><a href=\"https://www.youtube.com/watch?v=j5ZpgDBLQ5Q&#x26;t=508s\">https://www.youtube.com/watch?v=j5ZpgDBLQ5Q&#x26;t=508s</a></p>\n</blockquote>\n<p>이걸 보니 <code class=\"language-text\">google-images-download</code> 라는 라이브러리가 있다는걸 알았고, 그래서 구글 이미지 한정으로 쉽게 크롤링 할수 있는것 같았다.</p>\n<h3 id=\"2-google_images_download-라이브러리-다운로드\" style=\"position:relative;\"><a href=\"#2-google_images_download-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C\" aria-label=\"2 google_images_download 라이브러리 다운로드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) google_images_download 라이브러리 다운로드</h3>\n<blockquote>\n<p><a href=\"https://pypi.org/project/google_images_download/\">https://pypi.org/project/google_images_download/</a></p>\n</blockquote>\n<p>여기가 공식 홈페이지인데, 다운로드 방법이나 사용 방법등이 영어로 친절하게 설명이 되어 있다.\n하지만 위 공식 홈페이지에서 최신 버전으로 사용하다보면 에러가 발생할 수도 있다고 하여, 유튜브에 소개된 대로 다른 분이 올려주신 것을 다운받아 사용하였다.</p>\n<h3 id=\"3-크롤링-소스\" style=\"position:relative;\"><a href=\"#3-%ED%81%AC%EB%A1%A4%EB%A7%81-%EC%86%8C%EC%8A%A4\" aria-label=\"3 크롤링 소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 크롤링 소스</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> git+https://github.com/Joeclinton1/google-images-download.git</code></pre></div>\n<p>우선은 이렇게 라이브러리를 설치해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## SSL: CERTIFICATE_VERIFY_FAILED 에러 조치</span>\n<span class=\"token keyword\">import</span> ssl\nssl<span class=\"token punctuation\">.</span>_create_default_https_context <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>_create_unverified_context\n\n\n<span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> response\n<span class=\"token keyword\">from</span> google_images_download <span class=\"token keyword\">import</span> google_images_download\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">googleImageCrwaling</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    response <span class=\"token operator\">=</span> google_images_download<span class=\"token punctuation\">.</span>googleimagesdownload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    arguments <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"keywords\"</span><span class=\"token punctuation\">:</span>keyword<span class=\"token punctuation\">,</span><span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">:</span>limit<span class=\"token punctuation\">,</span><span class=\"token string\">\"print_urls\"</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chromedriver\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"./chromedriver\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"format\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"jpg\"</span><span class=\"token punctuation\">}</span>\n    paths <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">)</span>\n\n\nitemList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./itemList.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    line <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    itemList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> itemList<span class=\"token punctuation\">:</span>\n    googleImageCrwaling<span class=\"token punctuation\">(</span>keyword<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> limit<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>나 같은 경우에는 원하는 인물들의 이름을 txt 파일에 넣어두고 그 파일을 읽어서 <code class=\"language-text\">keyword</code>에 담기도록 했더니 세상에 금방 다운로드가 된다 ㄷㄷ<br>\n(chromedriver 옵션이 있지만 그걸 사용하지 않으니까 화면 로딩이 필요 없어서 더 빠른 듯 했다!)</p>\n<p>그리고 위 라이브러리로 다운을 받으면 워크스페이스 안에 <code class=\"language-text\">downloads</code> 디렉토리가 생기고 그 밑으로 검색 <code class=\"language-text\">키워드별 폴더</code>가 생성되어 다운로드 후에도 어떤 결과값인이 알기가 편해서 좋았다.</p>\n<p>크롤링 하는 방법을 좀 더 익혀둬야 할 것 같다!!</p>","frontmatter":{"date":"October 27, 2022","title":"python으로 구글 이미지 크롤링 하는법","categories":"Python","author":"줌코딩","emoji":"🧢"},"fields":{"slug":"/python-001-google-crwaling/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://koreanckh.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/spring-004-mybatis-innerclass/","nextSlug":"/python-001-google-crwaling/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}